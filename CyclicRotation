/*  An array A consisting of N integers is given. Rotation of the array means that each element is shifted right by one index, 
and the last element of the array is moved to the first place. For example, the rotation of array A = [3, 8, 9, 7, 6] is [6, 3, 8, 9, 7] (elements are shifted right by one index and 6 is moved to the first place).
The goal is to rotate array A K times; that is, each element of A will be shifted to the right K times.



import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class CyclicRotation {
	public static void main(String[] args) {

		Scanner in = new Scanner(System.in);
		System.out.println("Enter the Size of Array ");
		int arrSize = in.nextInt();
		int result = 0;
		System.out.println("Enter The Elements ");
		int[] inputArray = new int[arrSize];
		for (int i = 0; i < arrSize; i++) {
			inputArray[i] = in.nextInt();
		}
		System.out.println("Enter the value of K (number of rotation) ");
		int k = in.nextInt();

		Integer[] finalResult = rotateTheArray(inputArray, k);
		System.out.println("---Result---");
		for (int i = 0; i < finalResult.length; i++) {
			System.out.print(finalResult[i]);
		}

	}

	private static Integer[] rotateTheArray(int[] inputArray, int k) {
		// TODO Auto-generated method stub

		// 1 2 3 4 5 -- 5 1 2 3 4

		List<Integer> outputList = new ArrayList<Integer>();
		for (int i = inputArray.length - k; i < inputArray.length; i++) {
			outputList.add(inputArray[i]);
		}

		for (int i = 0; i < inputArray.length - k; i++) {
			outputList.add(inputArray[i]);
		}

		Integer[] itemsArray = new Integer[outputList.size()];
		return outputList.toArray(itemsArray);

	}
}
